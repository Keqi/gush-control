.row
  .large-8.columns
    h1
      = @workflow.class
      '
      small = @workflow.name
  .large-4.columns
    br
    a.button.success.small.round.start-workflow data-action="start" data-workflow-id=@workflow.name Start workflow
.row
  .large-12.columns
    svg#canvas-svg data-workflow-id=@workflow.name width="100%" height="400"
      g class="viewport"
.row
  .large-12.columns
    h2 Jobs
    table.nodes
      thead
        th Name
        th Status
      tbody

script
  == "var nodes = #{JSON.dump(@nodes)};"
  == "var links = #{JSON.dump(@links)};"

javascript:


  var g = new dagreD3.Digraph();
  nodes.forEach(function(node) {
    g.addNode(node.name, { finished: node.finished, failed: node.failed, running: node.running, label: node.name });
  });

  links.forEach(function (edge) {
    g.addEdge(null, edge.source, edge.target);
  });

  var renderer = new dagreD3.Renderer();
  var layout = dagreD3.layout()
                    .nodeSep(20)
                    .rankDir("LR");
  var oldDrawNodes = renderer.drawNodes();
  renderer.drawNodes(function(graph, root) {
    var svgNodes = oldDrawNodes(graph, root);
    svgNodes.attr("class", function(name) {
      var node = g.node(name);
      var classes = "node " + name.replace(/::/g, '_').toLowerCase();
      if (node.finished)
        classes += " status-finished";
      if (node.failed)
        classes += " status-failed";
      if (node.running)
        classes += " status-running";
      return classes;
    });
    return svgNodes;
  })
  .layout(layout)
  .run(g, d3.select("svg g"));

  var svg = svgPanZoom('#canvas-svg', {
    panEnabled: true,
    minZoom: 0.8,
    maxZoom: 10,
    zoomEnabled: true,
    center: false,
    fit: true
  });
css:
  svg {
    overflow: hidden;
  }

  text {
    font-weight: 300;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serf;
    font-size: 14px;
  }

  .node rect {
    stroke-width: 2px;
    stroke: #333;
    fill: #fff;
  }

  .node.start rect, .node.failed rect {
    fill: #f77;
  }

  .node.end rect {
    fill: #7f7;
  }

  .node.status-finished.status-failed rect {
    fill: red;
  }

  .node.status-finished.status-failed text {
    color: white;
  }

  .node.status-finished rect {
    fill: #7f7;
  }

  .node.status-running rect {
    fill: yellow;
  }

  .edgeLabel rect {
    fill: #fff;
  }

  .edgePath path {
    stroke: #333;
    stroke-width: 1.5px;
    fill: none;
  }
